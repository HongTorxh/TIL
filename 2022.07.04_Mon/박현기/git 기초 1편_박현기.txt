Lecture : git local 저장소

버전 관리 시스템
클라이언트 서버 모델
서버가 모든 데이터
클라이언트는 일부 데이터
서버 다운 --> 클라이언트 혼자 작업 x
주고 받는 데이터가 적어 그만큼 자원을 적게 사용한다는 장점이 있음

분산모델
클라이언트도 서버처럼 모든 데이터를 가지고 있는 것처럼 생각하면됨.
서버없이 단독 행위 가능
하지만 클라이언트와 서버와 같은 데이터를 가지고 있어야 돼서
항상 동기화과정을 거침.
--> 자원을 많이 사용함.

git = 분산모델
변경된 코드만 찾아 바꾸는 형식으로 분산모델의 단점을 조금 더 보완함.

기본 명령어
git init
이 폴더에서 git를 사용하겠다는 의미 (초기화)
git add + 파일명
파일을 추적하겠다는 뜻
git commit
지금 상태의 파일들을 모아서 하나의 세이브 데이터를 형성
git status
현재 상태 표시

branch 명령어
git branch
현재 상태를 기준으로 분기점을 만드는 것
git checkout
특정 branch로 이동을 하는 것
git merge
서로 다른 분기점을 합치는 것
--> 충돌이 생길 수 있음.
기본 branch가 master branch
그래서 다른 분기점으로 이동할때에는 
git checkout을 써야함.

추가 지식
git commit -a
git commit -m
한 줄 메세지를 넣을 수 있음.
git add.
모든 파일들을 한 번에 add 하는 것.

옛날에 만들었던 것을 저장해두고 
새로운 것을 만들 수 있다.

git commit -a 
그 폴더 안에 있는 모든 파일들을 한 번에 add 하고 commit하겠다는 의미.

git는 충동하는 데이터도 쉽게 수정할 수 있도록 하는 장점이 있다.